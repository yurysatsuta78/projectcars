// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectcars;

#nullable disable

namespace projectcars.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240912133720_ProjectCarsDbCreated")]
    partial class ProjectCarsDbCreated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projectcars.Entities.BrandEntity", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BrandId");

                    b.HasIndex("BrandName")
                        .IsUnique();

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("projectcars.Entities.CarEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Abs")
                        .HasColumnType("bit");

                    b.Property<bool>("Asr")
                        .HasColumnType("bit");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriveTrain")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EnginePower")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("EngineType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("EngineVolume")
                        .HasMaxLength(10)
                        .HasColumnType("float");

                    b.Property<bool>("Esp")
                        .HasColumnType("bit");

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<bool>("Immobilazer")
                        .HasColumnType("bit");

                    b.Property<int>("Mileage")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<bool>("Signaling")
                        .HasColumnType("bit");

                    b.Property<string>("TransmissionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("projectcars.Entities.GenerationEntity", b =>
                {
                    b.Property<int>("GenerationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenerationId"));

                    b.Property<string>("EndYear")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("GenerationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<bool>("Restyling")
                        .HasColumnType("bit");

                    b.Property<string>("StartYear")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("GenerationId");

                    b.HasIndex("GenerationName")
                        .IsUnique();

                    b.HasIndex("ModelId");

                    b.ToTable("Generations");
                });

            modelBuilder.Entity("projectcars.Entities.ModelEntity", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ModelId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ModelName")
                        .IsUnique();

                    b.ToTable("Models");
                });

            modelBuilder.Entity("projectcars.Entities.CarEntity", b =>
                {
                    b.HasOne("projectcars.Entities.GenerationEntity", "GenerationEntity")
                        .WithMany("CarEntities")
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GenerationEntity");
                });

            modelBuilder.Entity("projectcars.Entities.GenerationEntity", b =>
                {
                    b.HasOne("projectcars.Entities.ModelEntity", "ModelEntity")
                        .WithMany("GenerationEntities")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelEntity");
                });

            modelBuilder.Entity("projectcars.Entities.ModelEntity", b =>
                {
                    b.HasOne("projectcars.Entities.BrandEntity", "BrandEntity")
                        .WithMany("ModelEntities")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BrandEntity");
                });

            modelBuilder.Entity("projectcars.Entities.BrandEntity", b =>
                {
                    b.Navigation("ModelEntities");
                });

            modelBuilder.Entity("projectcars.Entities.GenerationEntity", b =>
                {
                    b.Navigation("CarEntities");
                });

            modelBuilder.Entity("projectcars.Entities.ModelEntity", b =>
                {
                    b.Navigation("GenerationEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
